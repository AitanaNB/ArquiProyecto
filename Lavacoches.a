; PROYECTO
;-----------------------------------------------------------------------
;Se defienen las EQUs

ESTADO    EQU 30H       ; Variable para el estado actual (en RAM interna)
EVENTO    EQU 31H       ; Variable para el evento actual (en RAM interna)

; Definiciones de puertos
; Puerto 0
SEM_VERDE   EQU P0.0     ; Sem√°foro verde 0x80.0
SEM_ROJO    EQU P0.1     ; Sem√°foro rojo 0x80.1
S_PLAT      EQU P0.2     ; Sensor de coche en plataforma
FICHA_TIPO  EQU P0.3     ; Tipo de ficha (1: intensivo, 0: normal)
S_FICHA     EQU P0.4     ; Sensor de ficha introducida
P_START     EQU P0.5     ; Bot√≥n de inicio
AL_START    EQU P0.6     ; Alarma activa
BPOS_START  EQU P0.7     ; Fin de carrera del puente en posici√≥n inicial

; Puerto 1
BMOV_FRONT  EQU P1.0     ; Movimiento del puente hacia adelante
BMOV_BACK   EQU P1.1     ; Movimiento del puente hacia atr√°s
FC_RH_TOP   EQU P1.2     ; Fin de carrera del rodillo horizontal en parte alta
RH_UPTO     EQU P1.3     ; Mueve el rodillo horizontal hacia arriba
RH_DOWNTO   EQU P1.4     ; Mueve el rodillo horizontal hacia abajo
FC_RV_BORDE EQU P1.5     ; Fin de carrera de rodillos verticales en posici√≥n externa
RV_OUTTO    EQU P1.6     ; Mueve los rodillos verticales hacia afuera
RV_INTO     EQU P1.7     ; Mueve los rodillos verticales hacia adentro

; Puerto 2
EV_AGUA     EQU P2.0     ; Activa la bomba de agua
EV_JABON    EQU P2.1     ; Activa la bomba de jab√≥n
S_CAR       EQU P2.3     ; Sensor de presencia del veh√≠culo en el puente
FC_RV_CENTRO EQU P2.4    ; Fin de carrera de rodillos verticales en posici√≥n central
LED_LNOR    EQU P2.5     ; LED para lavado normal
LED_LINT    EQU P2.6     ; LED para lavado intensivo

; Canales PWM
PWM0        EQU 0xFC     ; PWM0 para velocidad de los rodillos
PWM1        EQU 0XFD     ; PWM1 para velocidad de los ventiladores de secado

; Puerto A/D
<<<<<<< HEAD
ADC EQU 0xC4 ;P5, no es bit adressable
;SPOS_RH     EQU P5.0     ; Sensor analÛgico para distancia del rodillo horizontal
;SPOS_RV     EQU P5.1     ; Sensor analÛgico para distancia de rodillos verticales
=======
SPOS_RH     EQU P5.0     ; Sensor anal√≥gico para distancia del rodillo horizontal
SPOS_RV     EQU P5.1     ; Sensor anal√≥gico para distancia de rodillos verticales
>>>>>>> 368b5453e9682ceb2ac4fa585529f4709142ba05
;-----------------------------------------------------------------------
;Directivas ORG para el programa de inicio y las ISR
ORG 0000H

AJMP INICIO

ORG 0x7B
;-----------------------------------------------------------------------
;Programa principal

INICIO:

	ACALL INIT			;llamada a inicializaciones
	BUCLE:				;bucle principal
 		;ACALL GENERADOR_EVENTOS
 		ACALL FSM		;Finite State Machine, m·quina de estados
		AJMP BUCLE		;Repetir bucle principal
ORG 0x7B ; donde va el programa principal
;-----------------------------------------------------------------------
;Inicializaciones
INIT:
	;INICIALIZACI√ìN DE REGISTROS
	MOV A, #00H		;se inicializa los registros
	MOV ESTADO, #00H	;se empieza en el ESTADO ESPERA
	MOV EVENTO, #00H	;se empieza con el EVENTO 0

	;INICIALIZACI√ìN DE PUERTOS DE SALIDA
	SETB SEM_VERDE        ; Apagar sem√°foro verde
    	CLR SEM_ROJO         ; Apagar sem√°foro rojo
    	CLR AL_START         ; Apagar alarma

    	RET


	;INICIALIZACI”N DE FLAGS
	;INICIALIZACI”N DE INTERRUPCIONES
;-----------------------------------------------------------------------
;FSM
FSM: 
=======
	

	;INICIALIZACI√ìN DE FLAGS

	;INICIALIZACI√ìN DE INTERRUPCIONES
;-----------------------------------------------------------------------
;M√ÅQUINA DE ESTADOS

MAQ_ESTADOS: 
>>>>>>> 368b5453e9682ceb2ac4fa585529f4709142ba05
	MOV A, ESTADO	;leer el estado actual
	RL A 
	MOV DPTR, #LISTA_EST 
 	JMP @A+DPTR 	;saltar al estado correspondiente
LISTA_EST: 
 	AJMP ESTADO_0  ; ESPERA Estado 0  
	AJMP ESTADO_1  ; ESPERA_FICHA Estado 1 
	AJMP ESTADO_2  ; ESPERA_BOT√ìN Estado 2 
	AJMP ESTADO_3  ; ENJABONADO Estado 3  
	AJMP ESTADO_4  ; FROTADO_TRASERO Estado 4 
	AJMP ESTADO_5  ; FROTADO_LATERAL Estado 5 
	AJMP ESTADO_6  ; FROTADO_FRONTAL Estado 6 
	AJMP ESTADO_7  ; ACLARADO Estado 7 
	AJMP ESTADO_8  ; SECADO Estado 8

;===================ESTADO0=======================;	 
ESTADO_0:   
<<<<<<< HEAD
 	ACALL ES0_GEN_EV	;Generador de eventos para ESPERA sem·foro verde
	MOV A, EVENTO
	RL A
	MOV DPTR, #ES0_EV_TAB
	JMP @A+DPTR

	ES0_EV_TAB:		;TABLA DE EVENTOS
	AJMP ES0_EV0
	AJMP ES0_EV1

	ES0_EV0:		;evento vacÌo
	RET

	ES0_EV1:
	;activar contador
	RET
	
	ES0_GEN_EV: 		;generador de eventos
	MOV A, P0
	ANL A, #00000100b 
	JB P0.2, COCHE_DETECTADO ;si se detecta coche vamos a evento 1
	;SI CONT 5 ESTADO 2, EVENTO 0
	RET

	ES0_COCHE_DETECTADO:
	MOV EVENTO, #1
	RET
;===================ESTADO1=======================;
=======
 	ACALL E0_GEN_EV; Generador de eventos para ESPERA
	MOV A, EVENTO
	RL, A
	MOV DPTR, #E0_EV_TAB
	JMP @A+DPTR
;TABLA DE EVENTOS
	ES0_EV_TAB:
	AJMP E0_EV0
	AJMP E0_EV1
	E0_EV0: ;EVENTO VACIO
	RET
	E0_EV1: ;EVENTO COCHE DETECTADP
	MOV ESTADO, #1
	SETB EV2 ;ABRIMOS LA VALVULA DE ABAJO
	MOV EVENTO, #0
	RET

	E0_GEN_EV: ;GENERADOR DE EVENTOS
	MOV A, S_PLAT
	;ANL A, #00000100b      ;Salto condicionado AND
	JNZ S_PLAT_ACTIVADO 	;JNZ ES0_NB_ACTIVADO
	RET
	S_PLAT_ACTIVADO: ;CONDICION
	MOV EVENTO, #2
	RET 
>>>>>>> 368b5453e9682ceb2ac4fa585529f4709142ba05
ESTADO_1:   
 	ACALL ES1_GEN_EV	;Generador de eventos para ESPERA FICHA
	MOV A, EVENTO
	RL A
	MOV DPTR, #ES0_EV_TAB	 ; Tabla de eventos del estado 1
	JMP @A+DPTR

	ES0_EV_TAB:		;TABLA DE EVENTOS
	AJMP ES1_EV0           ; Evento vacÌo
	AJMP ES1_EV1           ; Evento 1: ficha detectada
	AJMP ES1_EV2           ; Evento 2: contador alcanza 30
	AJMP ES1_EV3           ; Evento 3: volver al estado inicial

	ES1_EV0:		;evento vacÌo
	RET

	ES1_EV1:		;contador = 30 y ficha = 0
	SETB AL_START	
	RET

	ES1_EV2:		;ficha detectada
	MOV ESTADO, #02H	;Cambiar al estado 2
	MOV A, FICHA_TIPO
	JZ LAVADO_NORMAL	;si FICHA_TIPO=0 lavado normal
	MOV PWM0, #FFH
	SETB LED_LINT		;activar lavado intensivo
	RET

	LAVADO_NORMAL:
	SETB LED_LNOR		;activar lavado normal
	MOV PWM0, #50H
	RET

	ES1_EV3:		;plataforma vacÌa, volver a estado 0
	MOV ESTADO, #00H	
	RET
	
	ES1_GEN_EV: 		;generador de eventos
	JNB S_FICHA, CHECK_TIMER	; si no hay ficha, mirar timer
	MOV EVENTO, #01H
	RET

	CHECK_TIMER:
	MOV A, CONT
	CJNE A, #30H, CHECK_PLAT       ; Si el contador no es 30, verificar plataforma
	JNB S_FICHA, TIMER_EXPIRED     ; Si contador = 30 y no hay ficha, evento 2
	JMP CHECK_PLAT

	TIMER_EXPIRED:
		MOV EVENTO, #02H               ; Evento 2: contador = 30 y ficha = 0
		RET
	
	CHECK_PLAT:
		JNB S_PLAT, PLATFORM_EMPTY     ; Si la plataforma est· vacÌa, evento 3
		MOV EVENTO, #00H               ; Ning˙n evento, seguir en evento 0
		RET
	
	PLATFORM_EMPTY:
		MOV EVENTO, #03H               ; Evento 3: plataforma vacÌa
		RET
;===================ESTADO2=======================;
ESTADO_2:   
 	ACALL MQ_EVEN_2 ;Generador de eventos para ESPERA_BOTON
	MOV A,EVENTO
	RL A
	MOV DPTR, #ES2_EV_TAB 	;tabla de eventos del estado 2
	JMP @A+DPTR

	ES2_EV_TAB:
	AJMP ES2_EV0           ; contador sigue aumentando
	AJMP ES2_EV1           ; alarma activada tras 30 segundos
	AJMP ES2_EV2           ; botÛn presionado o 60 segundos alcanzados
	
	ES2_EV0:
	RET

	ES2_EV1:		;30S sin boton
	SETB AL_START

 	RET 
;===================ESTADO3=======================;
ESTADO_3:   
 	ACALL MQ_EVEN_3 ;Generador de eventos para ENJABONADO
 	RET 
;===================ESTADO4=======================;
ESTADO_4:   
 	ACALL MQ_EVEN_4 ;Generador de eventos para FROTADO_TRASERO
 	RET 
;===================ESTADO5=======================;
ESTADO_5:   
 	ACALL MQ_EVEN_5 ;Generador de eventos para FROTADO_LATERAL
 	RET
;===================ESTADO6=======================; 
ESTADO_6:   
 	ACALL MQ_EVEN_6 ;Generador de eventos para FROTADO_FRONTAL
 	RET

;===================ESTADO7=======================;  
ESTADO_7:   
 	ACALL MQ_EVEN_7 ;Generador de eventos para ACLARADO
 	RET
;===================ESTADO8=======================;  
ESTADO_8:   
 	ACALL MQ_EVEN_8 ;Generador de eventos para SECADO
 	RET 

;----------------------------------- 
MQ_EVEN_0: 		; Generador de eventos para el estado ESPERA
	MOV A, EVENTO
	RL A 
	MOV DPTR, #LIST_EVEN_MQEV_0 
	JMP @A+DPTR 
LIST_EVEN_MQEV_0: 
 	AJMP ME0_EV_0  ; Evento 0 
 	AJMP ME0_EV_1  ; Evento 1 No hay veh√≠culo en la plataforma
 	AJMP ME0_EV_2  ; Evento 2 Detecci√≥n del coche
	AJMP ME0_EV_3  ; Evento 3 contador>=5 seg en la plataforma
; Evento 0: null
ME0_EV_0: 
 	RET 
; Evento 1: no hay veh√≠culo en la plataforma (S_PLAT=0)
ME0_EV_1:       	;no hay coche
	SETB SEM_VERDE	;encender sem√°foro verde
	CLR SEM_ROJO
	CLR cont
 	RET
; Evento 2: detecci√≥n del veh√≠culo en la plataforma (S_PLAT=1)
ME0_EV_2:
 	CLR SEM_VERDE
	SETB SEM_ROJO
	SETB INICIAR_TIMER	;activa el temporizador
 	RET 
ME0_EV_3: 
	CLR INICIAR_TIMER
	MOV ESTADO, #01H	;cambiar al estado ESPERA_FICHA
 	RET 

;----------------------------------- 
MQ_EVEN_1: 		; Generador de eventos para el estado ESPERA_FICHA
	MOV A, EVENTO 
	RL A 
 	MOV DPTR, #LIST_EVEN_MQEV_1
 	JMP @A+DPTR 
LIST_EVEN_MQEV_1: 
	 AJMP ME1_EV_0  ; Evento 0 
	 AJMP ME1_EV_1  ; Evento 1 
	 AJMP ME1_EV_2  ; Evento 2
	 AJMP ME1_EV_3	; Evento 3
; Evento 0: null
ME1_EV_0: 
	 RET 
; Evento 1: pasan 30s sin ficha
ME1_EV_1: 
	SETB AL_START
	RET 
; Evento 2: ficha introducida (S_FICHA=1)
ME1_EV_2:
	MOV A, FICHA_TIPO
	JZ LAVADO_NORMAL	;si FICHA_TIPO=0 lavado normal
	MOV PWM0, #00H
	MOV PWM1, #00H
	;lavado intensivo
	SETB LED_LINT		;activar lavado intensivo
	AJMP ME1_EV2_FIN
LAVADO_NORMAL:
	SETB LED_LNOR		;activar lavado normal
	MOV PWM0, #50H

ME1_EV2_FIN:
	CLR AL_START
	MOV ESTADO, #02H	;cambiar al estado ESPERA_BOT√ìN
	RET
; Evento 3: retira el coche de la plataforma (S_PLAT=0)
ME1_EV3:
	CLR AL_START
	SETB SEM_VERDE
	CLR SEM_ROJO
	MOV ESTADO, #00H	;vuelve al estado de ESPERA
	RET

;----------------------------------- 
MQ_EVEN_2: 		; Generador de eventos para el estado ESPERA_BOTON
	MOV A, EVENTO 
	RL A 
	MOV DPTR, #LIST_EVEN_MQEV_2	 
	JMP @A+DPTR 
LIST_EVEN_MQEV_2: 
 	AJMP ME2_EV_0  ; Evento 0 
 	AJMP ME2_EV_1  ; Evento 1 
 	AJMP ME2_EV_2  ; Evento 2
	AJMP ME2_EV_3  ; Evento 3
; Evento 0: null
ME2_EV_0: 
 	RET 
; Evento 1: pasan 30s sin pulsar el bot√≥n
ME2_EV_1: 
	SETB AL_START
 	RET 
; Evento 2: pasan 60s sin presionar el bot√≥n
ME2_EV_2: 
	CLR AL_START
	MOV ESTADO, #03H	;pasa al estado ENJABONADO
 	RET 
; Evento 3: bot√≥b de inicio pulsado (P_START=1)
ME2_EV_3: 
	CLR AL_START
	MOV ESTADO, #03H	;pasa al estado ENJABONADO
 	RET 


;----------------------------------- 
MQ_EVEN_3: 	;eventos que generan en el ESTADO ENJABONADO
	MOV A, EVENTO
	RL A 
	MOV DPTR, #LIST_EVEN_MQEV_3
	JMP @A+DPTR 
LIST_EVEN_MQEV_3: 
 	AJMP ME3_EV_0  ; Evento 0 
 	AJMP ME3_EV_1  ; Evento 1 
 	AJMP ME3_EV_2  ; Evento 2
 	AJMP ME3_EV_3  ; Evento 3 
; Evento 0; null
ME3_EV_0: 
 	RET 
; Evento 1: detecta el coche
ME3_EV_1: 
	SETB EV_AGUA
	SETB EV_JABON
	SETB BMOV_FRONT
 	RET 
; Evento 2: fin detecci√≥n coche
ME3_EV_2: 
	CLR EV_AGUA
	CLR EV_JABON
 	RET 
ME3_EV_3: 
	SETB BMOV_FRONT
	MOV ESTADO, #04H	;pasa a FROTADO
 	RET 
‚Ä¶ 

;----------------------------------- 
MQ_EVEN_4: 		; Generador de eventos para el estado FROTADO
	MOV A, EVENTO 
	RL A 
 	MOV DPTR, #LIST_EVEN_MQEV_4
 	JMP @A+DPTR 
LIST_EVEN_MQEV_4: 
	 AJMP ME4_EV_0  ; Evento 0 
	 AJMP ME4_EV_1  ; Evento 1
ME4_EV_0: 
	 RET 
ME4_EV_1: 
	SETB RV_INTO
	MOV A, PWM0
	MOV ESTADO, #05H	;cambia al estado FROTADO_TRASERA
	RET 
‚Ä¶ 

;----------------------------------- 
MQ_EVEN_5: 		; Generador de eventos para el estado FROTADO_TRASERA
	MOV A, EVENTO 
	RL A 
	MOV DPTR, #LIST_EVEN_MQEV_5	 
	JMP @A+DPTR 
LIST_EVEN_MQEV_5: 
 	AJMP ME5_EV_0  ; Evento 0 
 	AJMP ME5_EV_1  ; Evento 1 
 	AJMP ME5_EV_2  ; Evento 2
	AJMP ME5_EV_3  ; Evento 3
 
ME5_EV_0: 
 	RET 
ME5_EV_1: 
	SETB RV_INTO
	SET PWM0
 	RET 

ME5_EV_2: 
	CLR RV_INTO
	SETB RV_OUTTO
 	RET 
ME5_EV_3: 
	CLR RV_OUTTO
	CLR PWM0
	MOV ESTADO, #06H	;cambia a estado FROTADO_LATERAL
 	RET 
‚Ä¶ 


;----------------------------------- 
MQ_EVEN_6:		; Generador de eventos para el estado FROTADO_LATERAL
	MOV A, EVENTO
	RL A 
	MOV DPTR, #LIST_EVEN_MQEV_0 
	JMP @A+DPTR 
LIST_EVEN_MQEV_6: 
 	AJMP ME6_EV_0  ; Evento 0 
 	AJMP ME6_EV_1  ; Evento 1 
 	AJMP ME6_EV_2  ; Evento 2
	AJMP ME6_EV_3  ; Evento 3
 	AJMP ME6_EV_4  ; Evento 4
ME6_EV_0: 
 	RET 
ME6_EV_1: 
	SETB BMOV_BACK
 	RET 
ME6_EV_2: 
	CLR BMOV_BACK
	SETB RH_DOWNTO
	SETB RV_INTO
 	RET 
ME6_EV_3: 
	MOV A, SPOS_RV
	
	
AJUSTE:
	SETB RV_OUTTO

 	RET
ME6_EV_4: 
 	RET 


;----------------------------------- 
MQ_EVEN_7: 		; Generador de eventos para el estado FROTADO_FRONTAL
	MOV A, EVENTO 
	RL A 
 	MOV DPTR, #LIST_EVEN_MQEV_7
 	JMP @A+DPTR 
LIST_EVEN_MQEV_7: 
	 AJMP ME7_EV_0  ; Evento 0 
	 AJMP ME7_EV_1  ; Evento 1  
	 AJMP ME7_EV_2  ; Evento 2 
ME7_EV_0:
	RET 
ME7_EV_1: 
	SETB BMOV_BACK
	RET 
ME7_EV_2: 
	SETB RV_INTO
	RET 
ME7_EV_3: 
	CLR RV_INTO
	CLR PWM0
	MOV ESTADO, #08H        ;cambiar al estado ACLARADO
	RET 
;----------------------------------- 
MQ_EVEN_8: 		; Generador de eventos para el estado ACLARADO
	MOV A, EVENTO 
	RL A 
	MOV DPTR, #LIST_EVEN_MQEV_8	 
	JMP @A+DPTR 
LIST_EVEN_MQEV_8: 
 	AJMP ME8_EV_0  ; Evento 0 
 	AJMP ME8_EV_1  ; Descripci√≥n Maq. Event. 0. Evento 1 
	‚Ä¶    ‚Ä¶ 
 	AJMP ME8_EV_k  ; Descripci√≥n Maq. Event. 0. Evento k 
ME8_EV_0: 
 	RET 
ME8_EV_1: 
	[ACCI√ìN_i] 
	[ACCI√ìN_ii] 
	‚Ä¶ 
 	RET 
‚Ä¶ 

;----------------------------------- 
MQ_EVEN_9: 		; Generador de eventos para el estado SECADO
	MOV A, EVENTO
	RL A 
	MOV DPTR, #LIST_EVEN_MQEV_9
	JMP @A+DPTR 
LIST_EVEN_MQEV_9: 
 	AJMP ME9_EV_0  ; Evento 0 
 	AJMP ME9_EV_1  ; Evento 1 
 	AJMP ME9_EV_2  ; Evento 2
	AJMP ME9_EV_3  ; Evento 3
 	AJMP ME9_EV_4  ; Evento 4 
 	AJMP ME9_EV_5  ; Evento 5
	AJMP ME9_EV_6  ; Evento 6
ME9_EV_0: 
 	RET 
ME9_EV_1: 
	
 	RET 


END
